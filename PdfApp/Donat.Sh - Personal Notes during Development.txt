~ ~ ~ ~ ~

Donat.Sherifi Dev. Notes.

PDF Generation API - Bucakroo

~ ~ ~ ~ ~

Below is personal thoughts about current TaskFlow Structuring :


0) Clean Architecture : [DONE].
{
	--> Add 'Core' CL. : [DONE].
	--> Add 'Services' CL. : [DONE].
	--> Add 'Persistence' CL. : [DONE].

	--> Add Dependency Injection : [DONE].
	--> Add ILogger : [IP].
	--> if time, Add AutoMapper : [Aw].
}



I) PDF Generation should be one way mapping, HTML -> PDF.
{
	--> Add logic within Service layer method to Finalize the Conversion : [IP].
}



II) Implement Minimal APIs : [DONE].
{
	--> Research Clean Architecture based solution : [DONE].
	--> Create Interface for PDF Conversion : [DONE].
	--> Create Service implementing I. : [DONE].
	
	--> Add Simple ApiContext with EF. in memory : [DONE].
	--> Add DTO variant of all Domain classes : [DONE].
}



III) Implement API Key Authentication : [IP].
{
	--> ... : [...].
}



IV) Add Fluent Validation : [IP].
{
	--> ... : [...].
}



V) Add Core Objects : [DONE].
{
	--> Create Core CL. : [DONE].
	--> Move all preExisting DTOs : [DONE].
	--> Fill data for the 'PdfOption.cs' class : [DONE].
		--> Create 'PageMargin.cs' class " [DONE].
}



VI) Add Unit Testing, if time : [P].
{
	--> ... : [...].
}


VII) Add Docker Support : [P].
{
	--> ... : [...].
}


